import * as kafkaJs from 'kafkajs';
import { KafkaJsInstrumentationConfig } from './types';
import { InstrumentationBase, InstrumentationModuleDefinition } from '@opentelemetry/instrumentation';
export declare class KafkaJsInstrumentation extends InstrumentationBase<typeof kafkaJs> {
    static readonly component = "kafkajs";
    protected _config: KafkaJsInstrumentationConfig;
    private moduleVersion;
    constructor(config?: KafkaJsInstrumentationConfig);
    setConfig(config?: KafkaJsInstrumentationConfig): void;
    protected init(): InstrumentationModuleDefinition<typeof kafkaJs>;
    protected patch(moduleExports: typeof kafkaJs, moduleVersion: string): typeof kafkaJs;
    protected unpatch(moduleExports: typeof kafkaJs): void;
    private _getConsumerPatch;
    private _getProducerPatch;
    private _getConsumerRunPatch;
    private _getConsumerEachMessagePatch;
    private _getConsumerEachBatchPatch;
    private _getProducerSendBatchPatch;
    private _getProducerSendPatch;
    private _endSpansOnPromise;
    private _startConsumerSpan;
    private _startProducerSpan;
}
//# sourceMappingURL=kafkajs.d.ts.map